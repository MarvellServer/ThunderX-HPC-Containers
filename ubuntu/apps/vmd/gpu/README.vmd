---------
VMD NOTES
---------
1)  The Docker run command expects the the optix installation directory on the
    host to be mapped to /docker/run/optix directory inside the container.

    Use docker run argument "-v /host/path/to/optix:/docker/run/optix" to make 
    this mapping.

    Eg:
    docker run -it --rm --cap-add=SYS_PTRACE --cap-add=SYS_NICE \
         --shm-size=1G --gpus all \
         -v /host/path/to/optix:/docker/run/optix \
         hpc/gpu/vmd:BUILD_VERSION

2)  Add the following options to the docker run command to allow the docker
    to use the host display.

    "-e DISPLAY -e XAUTHORITY -v /tmp/.X11-unix:/tmp/.X11-unix"

    where DISPLAY is the display number (eg: ':0'), XAUTHORITY is the X auth file 
    (eg: '/root/.Xauthority') and /tmp/.X11-unix is the x socket

    Eg:
    docker run -it --rm --cap-add=SYS_PTRACE --cap-add=SYS_NICE \
         --shm-size=1G --gpus all \
         -v /host/path/to/optix:/docker/run/optix \
         -v /tmp/.X11-unix:/tmp/.X11-unix \
         -e DISPLAY -e XAUTHORITY \
         hpc/gpu/vmd:BUILD_VERSION

    Also run the following on host to add the root user to the access control list.
    xhost +si:localuser:root


3)  The default run command (/docker/run/run.sh) expects input tar ball
    festschrift.tar.gz to be present in /docker/run/festschrift.tar.gz. Map this
    file from the host into the docker using the -v. If you dont have access
    to this dataset, add the argumetn --entrypoint=/bin/bash to get an interactive
    shell on the container
