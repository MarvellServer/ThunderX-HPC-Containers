###############################################################################
# HACC                                                                        #
###############################################################################
FROM    devel AS hacc

COPY  --from=ucx /usr/local /usr/local
COPY  --from=openmpi /usr/local /usr/local
COPY  --from=fftw3 /usr/local /usr/local

# install additionla packages
RUN apt-get -y install wget

# fetch source and extract
RUN   mkdir -p /tmp/hacc && \
      wget -P /tmp/hacc https://asc.llnl.gov/coral-2-benchmarks/downloads/HACC_1_7.tar.bz2 && \
      cd /tmp/hacc && \
      tar -xjvf HACC_1_7.tar.bz2 HACC_1_7/src

# clean and remove redundant files
RUN   cd /tmp/hacc/HACC_1_7/ && \
      bash -c 'source src/env/bashrc.vesta; cd src/; make clean;'
RUN   cd /tmp/hacc/HACC_1_7/ && \
      find -name '._*' | xargs rm -v && \
      find -name '*.a' | xargs rm -v && \
      find -name .svn -type d | xargs rm -rv

# define build config and compile
COPY  data/bashrc.tx2 /tmp/hacc/HACC_1_7/src/env
RUN   cd /tmp/hacc/HACC_1_7/src && \
      bash -c 'source env/bashrc.tx2 ; cd cpu; make clean; make'

# install
RUN   mkdir -p /usr/local/hacc/bin
RUN   bash -c 'source /tmp/hacc/HACC_1_7/src/env/bashrc.tx2; cp /tmp/hacc/HACC_1_7/src/cpu/${HACC_PLATFORM}/hacc_tpm /usr/local/hacc/bin'

# copy run script and input files
RUN   mkdir -p /docker/run
COPY  data/indat      /docker/run/
COPY  data/cmbM000.tf  /docker/run/
COPY  data/run.sh           /docker/run/

# copy dockerfile and build files to docker/src
FROM  runtime
COPY  --from=ucx /usr/local /usr/local
COPY  --from=openmpi /usr/local /usr/local
COPY  --from=fftw3 /usr/local /usr/local
COPY  --from=hacc /usr/local/hacc/bin /usr/local/hacc/bin
COPY  --from=hacc /docker/run /docker/run
COPY  data/ /docker/src/data
ENV   PATH /usr/local/hacc/bin:${PATH}

# author
LABEL  MAINTAINER="Srikanth Yalavarthi"
LABEL  MAINTAINER_EMAIL="syalavarthi@marvell.com"
LABEL  HACC_VERSION="HACC_1_7"

# launch
ENTRYPOINT  bash "/docker/run/run.sh"
