###############################################################################
# QUDA                                                                      #
###############################################################################
FROM    devel AS quda

COPY    --from=openmpi /usr/local /usr/local
COPY    --from=cmake /usr/local /usr/local

# create required directories
RUN     mkdir -p /docker/run

# fetch source code
RUN cd /tmp && \
    git clone https://github.com/lattice/quda.git && \
    cd quda && \
    git fetch --all && \
    git checkout v1.0.0

# update environment
ENV CFLAGS="-w -g -Ofast -funroll-loops -mcpu=thunderx2t99 -march=armv8.1-a+lse ${CFLAGS}"
ENV FFLAGS="-w -g -Ofast -funroll-loops -mcpu=thunderx2t99 -march=armv8.1-a+lse ${FFLAGS}"
ENV FCFLAGS="-w -g -Ofast -funroll-loops -mcpu=thunderx2t99 -march=armv8.1-a+lse ${FCFLAGS}"
ENV CXXFLAGS="-w -g -Ofast -funroll-loops -mcpu=thunderx2t99 -march=armv8.1-a+lse ${CXXFLAGS}"
ENV LDFLAGS="${LDFLAGS}"

# configure, build and install
RUN cd /tmp/quda && \
    mkdir build-v100 && \
    cd build-v100 && \
    cmake -DCMAKE_INSTALL_PREFIX=/usr/local/quda -DQUDA_DIRAC_WILSON=ON -DQUDA_DIRAC_CLOVER=ON -DQUDA_BUILD_SHAREDLIB=ON -DQUDA_MPI=ON -DCMAKE_BUILD_TYPE=RELEASE -DQUDA_GPU_ARCH=sm_70 ../ && \
    make -j64 && \
    make -j64 install

# install examples
RUN mkdir -p /usr/local/quda/bin
RUN /usr/bin/install /tmp/quda/build-v100/tests/blas_test                 /usr/local/quda/bin/
RUN /usr/bin/install /tmp/quda/build-v100/tests/deflated_invert_test      /usr/local/quda/bin/
RUN /usr/bin/install /tmp/quda/build-v100/tests/dslash_ctest              /usr/local/quda/bin/
RUN /usr/bin/install /tmp/quda/build-v100/tests/dslash_test               /usr/local/quda/bin/
RUN /usr/bin/install /tmp/quda/build-v100/tests/eigensolve_test           /usr/local/quda/bin/
RUN /usr/bin/install /tmp/quda/build-v100/tests/hisq_stencil_test         /usr/local/quda/bin/
RUN /usr/bin/install /tmp/quda/build-v100/tests/invert_test               /usr/local/quda/bin/
RUN /usr/bin/install /tmp/quda/build-v100/tests/llfat_test                /usr/local/quda/bin/
RUN /usr/bin/install /tmp/quda/build-v100/tests/pack_test                 /usr/local/quda/bin/
RUN /usr/bin/install /tmp/quda/build-v100/tests/plaq_test                 /usr/local/quda/bin/
RUN /usr/bin/install /tmp/quda/build-v100/tests/staggered_dslash_ctest    /usr/local/quda/bin/
RUN /usr/bin/install /tmp/quda/build-v100/tests/staggered_dslash_test     /usr/local/quda/bin/
RUN /usr/bin/install /tmp/quda/build-v100/tests/staggered_eigensolve_test /usr/local/quda/bin/
RUN /usr/bin/install /tmp/quda/build-v100/tests/staggered_invert_test     /usr/local/quda/bin/
RUN /usr/bin/install /tmp/quda/build-v100/tests/su3_test                  /usr/local/quda/bin/
RUN /usr/bin/install /tmp/quda/build-v100/tests/unitarize_link_test       /usr/local/quda/bin/

# add labels
FROM    runtime
LABEL   MAINTAINER="Srikanth Yalavarthi"
LABEL   MAINTAINER_EMAIL="syalavarthi@marvell.com"
LABEL   QUDA_VERSION="1.0.0"

COPY  --from=openmpi /usr/local /usr/local
COPY	--from=quda /usr/local/quda /usr/local/quda
COPY	/data/ /docker/run/

# remove redundant packages
RUN dnf -y autoremove \
	    cuda-cufft-11-0 \
	    cuda-curand-11-0 \
	    cuda-cusolver-11-0 \
	    cuda-cusparse-11-0 \
	    cuda-npp-11-0 \
	    cuda-nvgraph-11-0 \
	    cuda-nvrtc-11-0 \
	    cuda-libraries-11-0 \
	    libcublas11

# install additional packages
RUN dnf -y install numactl-devel

# update environment
ENV	PATH /usr/local/quda/bin/:${PATH}
ENV	LD_LIBRARY_PATH /usr/local/quda/lib:${LD_LIBRARY_PATH}

# define entrypoint
ENTRYPOINT /bin/bash /docker/run/run.sh
