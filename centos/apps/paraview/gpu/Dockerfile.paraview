###############################################################################
# ParaView                                                                  #
###############################################################################
FROM    devel AS paraview

COPY    --from=openmpi /usr/local /usr/local
COPY    --from=cmake /usr/local /usr/local
COPY    --from=ffmpeg /usr/local /usr/local

# create required directories
RUN     mkdir -p /docker/run

# install OpenGL/Qt5/OpenGL dependencies
RUN dnf -y --enablerepo PowerTools install mesa-libGL-devel \
      libXt-devel \
      qt5-qtbase-devel \
      qt5-qtx11extras-devel \
      qt5-qttools-devel \
      qt5-qtsvg-devel \
      qt5-qtxmlpatterns-devel \
      ocl-icd \
      ocl-icd-devel

# update environment
ENV PATH /usr/local/cuda/bin:${PATH}
ENV PATH /usr/local/bin:${PATH}
ENV CUDACXX /usr/local/cuda/bin/nvcc
ENV CFLAGS "-w -g -Ofast -funroll-loops -mcpu=thunderx2t99 -march=armv8.1-a+lse ${CFLAGS}"
ENV FFLAGS "-w -g -Ofast -funroll-loops -mcpu=thunderx2t99 -march=armv8.1-a+lse ${FFLAGS}"
ENV FCFLAGS "-w -g -Ofast -funroll-loops -mcpu=thunderx2t99 -march=armv8.1-a+lse ${FCFLAGS}"
ENV CXXFLAGS "-w -g -Ofast -funroll-loops -mcpu=thunderx2t99 -march=armv8.1-a+lse ${CXXFLAGS}"
ENV LDFLAGS "${LDFLAGS}"

# fetch source code
RUN cd /tmp && \
    wget -O ParaView-v5.8.0.tar.gz 'https://www.paraview.org/paraview-downloads/download.php?submit=Download&version=v5.8&type=source&os=Sources&downloadFile=ParaView-v5.8.0.tar.gz' && \
    tar -xzf ParaView-v5.8.0.tar.gz

# configure paraview
RUN cd /tmp/ParaView-v5.8.0 && \
    mkdir build && cd build && \
    cmake ../ \
      -DCMAKE_BUILD_TYPE=Release \
      -DCMAKE_INSTALL_PREFIX=/usr/local/paraview \
      -DMPI_C_COMPILE_OPTIONS="-pthread" \
      -DMPI_CXX_COMPILE_OPTIONS="-pthread" \
      -DMPI_Fortran_COMPILE_OPTIONS="-pthread" \
      -DCMAKE_EXE_LINKER_FLAGS_RELEASE="${LDFLAGS}" \
      -DCMAKE_SHARED_LINKER_FLAGS_RELEASE="${LDFLAGS}" \
      -DINSTALL_CMAKE_PACKAGE_MODULE=OFF \
      -DINSTALL_DOCS=OFF \
      -DINSTALL_PKG_CONFIG_MODULE=OFF \
      -DPARAVIEW_BUILD_EXAMPLES=OFF \
      -DPARAVIEW_BUILD_SHARED_LIBS=OFF \
      -DPARAVIEW_USE_MPI=ON \
      -DPARAVIEW_USE_QT=ON \
      -DVTKm_ENABLE_MPI=ON \
      -DVTK_SMP_IMPLEMENTATION_TYPE=OpenMP \
      -DPARAVIEW_ENABLE_FFMPEG=ON \
      -DPARAVIEW_ENABLE_VISITBRIDGE=OFF \
      -DVTK_MODULE_ENABLE_VTK_IOFFMPEG=YES \
      -DFFMPEG_ROOT=/usr/local \
      -DPARAVIEW_USE_CUDA=OFF \
      -DVTKm_CUDA_Architecture=volta

# compile, install and clean
RUN cd /tmp/ParaView-v5.8.0/build && \
    make -j64 && \
    make install && \
    cd /tmp && rm -rf /tmp/ParaView-v5.8.0

# add labels
FROM    runtime
LABEL   MAINTAINER="Srikanth Yalavarthi"
LABEL   MAINTAINER_EMAIL="syalavarthi@marvell.com"
LABEL   PARAVIEW_VERSION="4.8.0"

COPY  --from=openmpi /usr/local /usr/local
COPY  --from=ffmpeg /usr/local /usr/local
COPY  --from=paraview /usr/local/paraview /usr/local/paraview
COPY	/data/ /docker/run/

# remove redundant packages
RUN dnf -y autoremove \
	    cuda-cufft-11-0 \
	    cuda-curand-11-0 \
	    cuda-cusolver-11-0 \
	    cuda-cusparse-11-0 \
	    cuda-npp-11-0 \
	    cuda-nvgraph-11-0 \
	    cuda-nvrtc-11-0 \
	    cuda-libraries-11-0 \
	    libcublas11

# install additional packages
RUN dnf -y install numactl-devel \
      libgomp \
      libICE \
      libX11 \
      libXt \
      libSM\
      libglvnd-glx \
      libglvnd-opengl \
      qt5-qtbase \
      qt5-qtbase-gui\
      qt5-qtsvg \
      qt5-qttools-libs-help \
      qt5-qtx11extras \
      ocl-icd

# clean up
RUN rm -rf /tmp/* && \
    dnf clean all

# update environment
ENV	PATH /usr/local/paraview/bin/:${PATH}
ENV	LD_LIBRARY_PATH /usr/local/paraview/lib:${LD_LIBRARY_PATH}

# define entrypoint
ENTRYPOINT /bin/bash /docker/run/run.sh
